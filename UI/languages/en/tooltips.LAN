{
  "Averagevtx": "Average weights\n\nsmooth a vertex's skinning information based on order of selection\n\nmultiple vertices selected:\nlast selected vertex will get the average weight of all selected vertices in current selection\n\n2 vertices selected:\nwill create a path that travels from first to last vertex based on edge connection, the smoothing will be applied over that range\n\n2 edgeloops selected:\nif the edgeloops share the same mesh, it will smooth the vertices between the 2 edgeloops\n\nthe average vertex button uses the bezier graph to determine how to smooth the objects\n\nExtra:\n- use distance; if this option is selected it will use the distances between vertices to multiply with the smooth value, if its turned off it will be based on the range",
  "smoothBrush": "smooth bursh\n\nto start the smooth brush the bindpose needs to be initiated using the 'BP' button\nthis will store all vertices in the current state as a pointcloud.\n\nonce in pose the mesh can be smooothed using the brush, the smooth operation works on all joints at the same time so no need to select influences\n\nextras:\n - relax: with this function turned on it tries to keep the angles of each edge attached to the vertex in the same state preventing jagged edges where possible\n - volume: the volume is the distance of vertrices to search between in the pointcloud allowing to smooth togeter vertices that are not connected, distance can be set in the box next to the current tool",
  "weightHammer" : "Weight Hammer:\n\nthis tool is similar to the weight hammer in maya, settings have been slightly changed to get better output",
  "neighbors" : "neighbors:\n\nsimple smoothing setup based on the information of neighboring vertices\n\nextras:\n- growing: will expand the selection after smoothing\n- full: instead of direct connected vertices by edges the growing function uses vertices connected by faces",
  "Copyvtx" : "Copy vertex weights:\n\nall vertices that are in the current selection will take over the same weight information as the last selected vertex",
  "convert" : "Convert to joint:\n\neither a vertex based selection (smooth values or not) or a cluster can be converted to a joint with the influences used to define the skinning\n\nnote: \n- this can be used to attach joints to the existing rig without breaking the original skinning",
  "freezeJoint" : "Freeze joints:\n\nuses the the freeze transformation tools in a way that it can be applied to joints that are bound to a mesh by a skincluster",
  "Switchvtx" : "Switch vertex weights:\n\ntakes in 2 vertices to switch the weight information between",
  "uvTransfer" : "Transfer UV's:\n\nThis tool allows the transfer of uv information from one object (source) to a skinned second object (target), the map that needs to be transfered can be chosen from a combobox.\nThis tool will make sure that the UV's are added to the original shape so the skincluster does not break.",
  "transfer" : "Transfer Weights:\n\nThis function can move weight information from one skincluster to another based on the vertex selection, make sure that the joints that influence the skinclusters is the same. as a convenience the vertex selection can be stored in the lower part. \nThe additive button allows the weights to be added on top of the original wieghts, and will be normalized after the fact.\n\nnote:\n- this setup can be convenient if you have a base skeleton you want to skin first and add procedural joints later without breaking the original skin",
  "copyClosest" : "Copy closest skinning information:\n\nthis allows you to transfer skinning information between componnets on the same skincluster, the source is the component selection to derive the skinning information from, the target selection will get the information applied to it. the number given is the amount of vertices that are closest to it from which the data will be derived",
  "prune" : "Prune excluded influences:\n\nThis takes a component selection and joints. the selected components will only be influences by the current joints in selection.\nExtra:\n - invert: This does the opposite, it will make sure that the components in selection are not influenced by the joints in selection.",
  "getMax" : "Show Influences over maximum:\n\nbased on the information given in the spinbox above, it will select all vertices on the given mesh that have more joint wieghts attached then the given number",
  "setMax" : "Fix Influences over maximum:\n\nbased on the information given in the spinbox, it will force the maximum amounts of weights, prune the list of weights to only keep the highest weights in total",
  "getMesh" : "Select influenced meshes:\n\nBased on the selected joints, the influenced meshes will be selected, this selects meshes that are attached to a skincluster on which the joints are present, even if the weight is 0",
  "delBp" : "Delete bindpose nodes:\n\nthis will delete all bindpose nodes in the current scene.\nsometimes skinclusters dont allow editting or addition of new joints as the bindpose might be out of order. The tools created here work without bindposes and use the joints themselves and the prebindmatrices of the skincluster to initiate bindpose.\nthat way we can edit everything without trouble",
  "fixBind" : "Fix bind mesh:\n\nfix the bind setup of the mesh.\nThe joints are able to move while bound to get a better bindpose. its based on the mesh selection, and needs the mesh selection again to stabelize.\n\nExtras:\n - model only: allows the alteration of the mesh, it can only move vertex positions or uv information, no extra vertices can be added or removed as it will change the index of the skincluster attachement and break.\n - in pose: shows both the prebind mesh as the final mesh, as to make it easier to see the endresult of the tweaks",
  "surfacePin" : "Surface Pin:\n\ncreates a locator on the center of the selected position using the component information to gather skincluster information.\nthe same information is fed through matrix calculations to simulate the same calculation as the skincluster",
  "boneMove" : "Bone Move:\n\nmove all the influences of the first selected bone to the second selected bone. this will only happen on the mesh that is selected as 3rd input",
  "boneSwitch" : "Bone Switch:\n\nswap the way the joints influence the mesh from the first selected joint to the second selected and vice versa. the mesh selected as 3rd option is the object on which the influences are switched",
  "selInfl" : "Select influenced vertices:\n\nGiven the joint and the mesh it will select all vertices that are influenced by the given joint.\nany influence above 0.0 is included\n\nnote:\n- this can be used to identify small influences that are out of place on the mesh",
  "unifyJoint" : "Unify bind map:\n\nfor all selected meshes that have skinclusters attached the driving joints will be unified.\nthis way transfering skinning information between different objects does not create any errors\n\nextra:\n - query: will select the joints that are currently influencing all selected meshes",
  "addJoint" : "Add Joint:\n\nadd selected joint influences to the current selected mesh. the joints are automatically unlocked and paintable but do not add information to the current skincluster and do not disrupt the existing information when added",
  "delJoint" : "Delete Joint:\n\nAbility to remove the joint from the current chain without destroying the skinclusters or the influences. \nthe default is using the closest joints as the new influence for joint that is to be removed\nextras:\n - use parent: if this is selected, instead of useing the closest joint, all influences will be added to the current parent\n - delete: will actually delete the joint and reparent the children\n- fast: will not take into account other joints at all, just removes the influence of the current joint and lets maya handle the normalization",
  "seperate" : "Extract skinned meshes:\n\nthis works differently based on selection:\n - component selection: it will creat a new mesh with the same skinning information\n - object selection: will seperate the mesh into multiple objects based on shell information (pre-combined meshes)",
  "extend" : "Store internal selection:\n\nbased on component selection it can be stored and expanded upon.\n each expansion is based on the connected vertices to the current face.\n\nthe '<' and '>' shrink and grow the setup making sure the initial selection is not part of the outcome",
  "selJoints" : "Select influencing joints:\n\nselects all joints that are attached to the current skincluster, even if they do not have any influence on the mesh",
  "proxy" : "Proxy Mesh:\n\ncut the character in seperate parts based on the skinning information. the meshes are connected to the joints directly using matrix information\n\nextras:\n-internal: prevents overlap in the cut up mesh parts, but will show visible holes\n- use OPM: from maya 2020 on we can use the offset parent matrix to connect parts instead of using a decompose matrix",
  "recalcBind" : "Recalculate bind position according to current position:\n\nSelect joints and affected meshes.\nThe '.preBindMatrix' skincluster attributes of the corresponding joints will be recalculated using the current position of the selected joints.\n\n- reset bindNode node: if a bindPose node exists node will be erased and re-created according to the whole skeleton hierarchy.",
  "Labeljoints" : "Label joints:\n\nautomatically label the joints based on given information.\n\n'*' are the wildcards that wil give information on how to search for the left and right side of the skeleton.\n\nmake sure that the entire skeleton adheres to the same naming convention, that way the labels will be set properly on each joint and it can be used to help with mirroring and copying skinning information.",
  "Skin2skin" : "Skin to Skin:\n\nusing 2 selected meshes\nthe first selected mesh is the source\nthe second selected mesh is the target\n\nas long as the driving joints are the same the information can be copied from the source to the target.\n\nextras:\n - smooth: smooths the operation instead of a 1 to 1 copy\n - uvSpace: copys information based on the uv settings instead of the vertex positions",
  "Skin2Pose" : "Skin to Pose:\n\nusing 2 selected meshes\nthe first selected mesh is the source\nthe second selected mesh is the target\n\nthe second mesh can be static (without skincluster)  and will be bound based on the current positions of the skeleton\n\nextras:\n - smooth: smooths the operation instead of a 1 to 1 copy\n - uvSpace: copys information based on the uv settings instead of the vertex positions",
  "saveVtx" : "Save/Load vertex information:\n\nStore the information of a single vertex so it can be loaded on a different mesh, this works as long as the joint influences are the same",
  "saveSkin" : "Save/Load skin information:\n\nStore the object information so it can be loaded on a different mesh with the same vertex count and index.",
  "initBind" : "It can always be quite hard to find good bind settings to start of your skinning work. This tool will aid you to set the bind weights for you. There are a few options available to you to get the preferred result. It is possible to run this tool on specific components of a mesh. This will make it possible to use different settings on different parts of the mesh.\n\nThe mesh can be smooth in memory to get rid of areas that would be hard otherwise to find the best associated joint. If smoothing itself is not enough the point can be displaced along its normal based on a the shortest distance to the joint multiplied by the projection variable. This will ensure that the point gets moved closer to the best associated joint. At the same time this needs to be used carefully as it can cause unexpected result on areas like mouth cavities etc.\n\nOn top of this it is possible to already blend the skin weights between the line of the parent influence and its child. If the blend option is not used vertices will have a maximum influence of 1. If blending is used the max influences per vertex increases to 2. The way this number is calculated is to get the parameter of the closest point on the line from the specified vertex. By default the blending is linear, but tweening methods can be used to create a nice fall-off on the weighting.",
  "softAssign" : "Convert soft selection into skin weights. More influences can be added by clicking the plus button. When more influences are added these weights are automatically blended. The influence and soft selection can be reselected by right clicking the influence widget and using the context menu.\n\nSkin cluster settings like max influences and normalization will be taken into account when applying the skin weights.",
  "Unifyshells" : "Unify shells:\n\nbased on selections, all vertices that are touching eachother thourhg edges will be grouped together\n\nper group all vertex weights will be clustered and averaged\n\nthis average weight is then applied to each group.\n\nnote:\n- this is ideal for areas in the skin that are hardsurface types"
}